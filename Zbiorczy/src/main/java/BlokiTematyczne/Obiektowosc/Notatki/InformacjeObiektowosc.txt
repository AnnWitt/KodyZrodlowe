- Klasa jest szablonem konstrukcji obiektu.
- Obiekty są instancjami klasy
- Zmienne i metody są składowymi klasy
- Sens wywolywania z maina innej klasy - teoretycznie moznaby wywolywac z wielu innych klas obiekty tej klasy.
Nie bedzie tu koniecznosci np definiowania
- Dwóch obiektów nie łączy nic poza przynależnoscią do tej samej klasy (np. suv i minivan w klasie vehicle).
Każdy z nich ma własny zestaw zmiennych (choc takich samych jeżeli chodzi o sturkturę)
- deklaracja referencji + utworzenie obiektu Vehicle (new)
Vehicle minivan=new Vehicle();  <=to samo=> Vehicle.minivan;   minivan=new Vehicle();

Vehicle.minivan;   --> deklaracja referencji do obiektu TYPU Vehicle || JESZCZE NIE JEST OBIEKTEM
minivan=new Vehicle(); --> Utworzenie obiektu klasy Vehicle z przypisaną referencją do minivan

Vehicle car1= new Vehicle();
Vehicle car2=car1;
Zmienne car1,car2 Referencje do tego samego obiektu (ale nie sa powiazane w inny sposob) analogicznie to
String dowolny=dowolny2

A Java String is an object of the class java. ... You can assign a string literal directly into a
String variable, instead of calling the constructor to create a String instance.

- metoda zawiera jedną lub więcej instrukcji (podprogram) -
najlepiej jakby sama w sobie wykonywala jedno zadanie
- main - metoda rozpoczynająca działanie programu. Ona będzie wywolywac nasze metody
- postać metodyL typZwracany nazwa)lista parametrów {ciało metody} np int Matematyczna(int a, int b)
- jeżeli metoda nie zwraca zadnych danych to typ-zwracany to void,
- metody służą do uzyskania dostępu do danych klasy i wykonania operacjy na tych danych
- Zwrocenie wartosci metody - return
- return w voidzie spowoduje zakonczenie metody np if (x==3) {return;} // koniec jezeli ystapi 3
np for (int i=0;i>10;i++) { if (i==5) return; sout;} - wykona sie tylko od 0 do 5 bo dla = 5 powrot z metody
Moze byc wiecej niz jedno return jeżeli wiecej rozgalezien
- metody zwracajace wartosc ( np sqrt()) -> return wartosc (musi byc typ metody inny niz void)
- wartosci przekazywane metodzie to argumenty, zmienne w metodzie (wewnatrz), które je otrzymują
to parametry (deklarujemy je w () po nazwie metody)

klasa vs obiekt - wzorzec, mysl o tym jak foremka do piasku i babki piaskowe

- Konstruktor - inicjacja obiektu podczas tworzenia
- ma taką samą nazwę jak klasa, nie mają typu zwracanego
- zwykle nadaje wartosci poczatkowe zmiennym
- zmienna = new nazwaKlasy (lista argumentow) <-- okreslenie konsturktora klasy
- jezeli klas anie ma oknstruktora ot java korzystaz z domyslnego

- MEtoda finalize() wywolywana przed odzyskaniem pamieci zajmowanej przez obiekt, któy zostanie usuniety
protected void finalize() {}

- this - >
int xxx;
PrzykladowyKonsturktor (int xxx) {
 this.xxx=xxx; --> do xxx zadeklarowanego w klasie przypisujemy argument
}

- Obiekty klasy string np String  str1=new String("Cokolwiek");
String str2="ddddddddddd";

//Operacje na łancuchach
- boolean equals(string) - zwracsa true jezeli lancuch dla którego zostala wywolana jest taki sam jak string

w klasie powtorki sporo tego jest

lancuchy sa niezmienne: jesli sie przypisze wartosc to powstaje nowy obiekt. Nieuzwane sa usuwane z pamieci


//dalej 159 wiecej o metodach i klasach